# -*- coding: utf-8 -*-
"""rewards.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wSaVp_tg-Thk_ih7KFoSLloaejQLe_v7
"""

import pandas as pd
import plotly.express as px
import numpy as np

data1 = np.asarray([
                    [-74.33685869, -72.5324857, -88.47022494, -61.16093581, -660.2188411, -34.48468219, -52.5229316, -59.32260936],
                    [-90.88501301, -46.11791824, -83.34722873, -94.2334051, -815.6631797, -61.06891306, -57.7632315, -47.8487639],
                    [-73.91411699, -77.59040873, -77.01557029, -92.72689018, -600.7604739, -59.89977608, -57.68274631, -64.39186185],
                    [-192.5411993, -24.95264984, -110.5459243, -74.78287134, -241.33862, -68.36011578, -57.71062246, -70.30127793],
                    [-70.56101865, -53.43896026, -75.05082911, -59.63233941, -417.1066496, -62.21954958, -51.147781, -77.42080861],
                    [-5.999697612, -59.11368912, -69.38302732, -61.16266931, -223.087533, -64.95227382, -55.6735378, -76.22536499],
                    [153.107842, -14.58965759, -39.34082378, -59.62059657, -758.0064858, -70.86303994, -53.00074024, -52.84115631],
                    [159.2601384, -24.20373697, -24.75340317, -71.05858162, -543.6898402, -70.5126974, -44.0885844, -47.21479324],
                    [167.520669, -51.60538555, -79.71618173, -58.89638826, -690.0980123, -54.12362492, -54.36445826, -55.11445826]
                    ])

data2 = np.asarray([
                    [-213.1039408, -86.60203251, -113.0851182, -108.8752598, -1049.245347, -100.0107539, -107.0070661, -99.5741411],
                    [-187.8262188, -116.0819553, -98.91194532, -106.2171531, -1044.407354, -134.9483129, -114.1879624, -115.5642645],
                    [-91.612578, -130.218187, -120.0383136, -119.0852531, -1238.74529, -109.9179512, -110.5007863, -120.1931743],
                    [-86.60450772, -116.5197368, -105.3994866, -108.8804071, -1167.584126, -125.4021974, -120.1197327, -122.5280382],
                    [-86.16190285, -123.8487977, -87.23595413, -125.1815342, -1161.814595, -120.1925051, -99.36077911, -114.6224723],
                    [-82.59160215,-124.054699, -88.14533935, -124.4893578, -1143.869427, -109.8486868, -124.6037669, -99.14100639],
                    [103.4123898, -95.06164134, -110.7838212, -111.850257, -1048.138292, -122.6433241, -124.3869051, -110.4287416],
                    [190.4916607, -112.0394803, -103.6646041, -115.3407975, -1130.158999, -98.2028528, -99.06896169, -109.5575971],
                    [210.56, -86.60203251, -147.9139065, -147.1861822, -1252.134843, -73.82300449, -175.8197084, -125.9059582]
                    ])

data3 = np.asarray([
                    [-143.7203998, -79.56725911, -100.7776716, -85.01809782, -854.732094, -67.24771804, -79.76499886, -79.44837523],
                    [-139.3556159, -81.09993674, -91.12958703, -100.2252791, -930.0352668, -98.008613, -85.97559695, -81.7065142],
                    [-82.76334749, -103.9042979, -98.52694197, -105.9060716, -919.752882, -84.90886363, -84.09176629, -92.2925181],
                    [-139.5728535, -70.73619331, -107.9727054, -91.83163922, -704.4613729, -96.8811566, -88.91517758, -96.41465804],
                    [-78.36146075, -88.64387899, -81.14339162, -92.40693682, -789.4606221, -91.20602736, -75.25428006, -96.02164045],
                    [-44.29564988, -91.58419406, -78.76418333, -92.82601353, -683.4784799, -87.40048032, -90.13865235, -87.68318569],
                    [128.2601159, -54.82564946, -75.06232252, -85.73542681, -903.0723888, -96.75318203, -88.69382266, -81.63494894],
                    [174.8758995, -68.12160865, -64.20900363, -93.19968954, -836.9244197, -84.3577751, -71.57877304, -78.38619518],
                    [189.0403345, -69.10370903,	-113.8150441, -103.0412853, -971.1164276, -63.97331471, -115.0920833, -90.5102082]
                    ])

for i in range(1, 4):
    path = globals()[f"data{i}"]
    globals()[f"df{i}"] = pd.DataFrame(path)
    globals()[f"df{i}"].columns = ['VI', 'DQN-SGD', 'DQN-Shoe', 'DQN-Adam', 'DQN-FN', 'PPO-SGD', 'PPO-Shoe', 'PPO-Adam']
    globals()[f"df{i}"]['epsilons'] = [1, 2, 3, 4, 5, 6, 7, 8, 9]

for i in range(1, 4):
    globals()[f"fig{i}"] = px.line(globals()[f"df{i}"], x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['DQN-SGD'], width=700)
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['DQN-Shoe'], mode='lines', name='DQN-DP-Shoe')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['DQN-Adam'], mode='lines', name='DQN-DP-Adam')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['DQN-FN'], mode='lines', name='DQN-DP-FN')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['PPO-SGD'], mode='lines', name='PPO-DP-SGD')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['PPO-Shoe'], mode='lines', name='PPO-DP-Shoe')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['PPO-Adam'], mode='lines', name='PPO-DP-Adam')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['VI'], mode='lines', name='VI-DP-Bellman')
    globals()[f"fig{i}"].update_layout(
        xaxis = dict(
            tickmode = 'array',
            tickvals = [1, 2, 3, 4, 5, 6, 7, 8, 9],
            ticktext = ['0.1', '0.105', '0.2', '0.5', '1', '2', '5', '10', '$\infty$']
        )
    )
    globals()[f"fig{i}"].update_layout(
        colorway=['#636EFA', 'rgb(255, 217, 47)', '#1CFFCE', '#000000', '#FF9616', '#ff3300', '#FC1CBF', '#109618'], 
        width=700,
        yaxis_title="Rewards",
        showlegend=False
    )
    globals()[f"fig{i}"].update_layout({
        'plot_bgcolor': 'rgb(255, 255, 255)',
        'paper_bgcolor': 'rgb(255, 255, 255)',
    })
    globals()[f"fig{i}"].update_xaxes(showline=True, linewidth=2, linecolor='#d1d1e0', gridcolor='#d1d1e0')
    globals()[f"fig{i}"].update_yaxes(showline=True, linewidth=2, linecolor='#d1d1e0', gridcolor='#d1d1e0')

    globals()[f"fig{i}"].update_xaxes(title_text=r"$\epsilon \text{ budget} \rightarrow$")
    globals()[f"fig{i}"].update_yaxes(title_text=r"$\text{Rewards} \rightarrow$")

# !pip install -U kaleido
import os

if not os.path.exists("plots"):
    os.mkdir("plots")

for i in range(1, 4):
    path = "plots/fig" + str(i) + ".jpeg"
    globals()[f"fig{i}"].write_image(path)