# -*- coding: utf-8 -*-
"""epsilons.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HOEM7ZWFons430UFjHvqMo6LdzmbEFzn
"""

import pandas as pd
import plotly.express as px
import plotly.subplots as sp
import numpy as np

data1 = np.asarray([[1.540945333, 1.86363725, 1.533722909, 1.594762167, 1.870347417, 1.594843833, 1.530633333, 1.597771],
                                [1.540945333, 1.598119667, 1.519928, 1.564120333, 1.870347417, 1.604960417, 1.53149925, 1.608112333],
                                [1.554363636, 1.617689636, 1.525699273, 1.602849667, 1.870347417, 1.591260273, 1.548757417, 1.59455225],
                                [1.556170333, 1.619713667, 1.558214083, 1.651585, 1.870347417, 1.636913, 1.561298, 1.602768583],
                                [1.549965091, 1.679957417, 1.564284, 1.695308333, 1.870347417, 1.6280065, 1.546285917, 1.640805083],
                                [1.52296425, 1.707157028, 1.648427818, 1.765017333, 1.870347417, 1.6280065, 1.572589167, 1.634622091],
                                [1.485782833, 1.74536825, 1.721034417, 1.772309833, 1.870347417, 1.635631667, 1.535094833, 1.665430364],
                                [1.447731727, 1.751854667, 1.738087, 1.805275083, 1.870347417, 1.64970225, 1.5746415, 1.622349333],
                                [1.41276025, 1.741164667, 1.71797425, 1.735445583, 1.870347417, 1.562195091, 1.503142, 1.74408975]])
data2 = np.asarray([[1.279701, 1.454691583, 1.292701, 1.3642545, 1.455882333, 1.345903167, 1.30251225, 1.367663917], 
                                [1.279701, 1.371823917, 1.301513167, 1.352501917, 1.455882333, 1.366337167, 1.309370083, 1.361553667], 
                                [1.283512, 1.365006636, 1.282118182, 1.373543167, 1.455882333, 1.357991364, 1.336250583, 1.38185475], 
                                [1.28543175, 1.374836833, 1.332877583, 1.394840417, 1.455882333, 1.390628083, 1.334897917, 1.37776325], 
                                [1.285140455, 1.400319667, 1.35367375, 1.407641333, 1.455882333, 1.38981475, 1.337240667, 1.393448333], 
                                [1.271609333, 1.430638906, 1.379080636, 1.418401333, 1.455882333, 1.38981475, 1.362904167, 1.369202818], 
                                [1.249158583, 1.421239, 1.407489417, 1.41806275, 1.455882333, 1.393767583, 1.326388167, 1.393603], 
                                [1.214712727, 1.403421333, 1.4122455, 1.429921583, 1.455882333, 1.380219667, 1.3431555, 1.38666275], 
                                [1.229633667, 1.374697167, 1.384080333, 1.384418417, 1.455882333, 1.358371636, 1.258345, 1.4496825]])
data3 = np.asarray([[1.141864083, 1.212393083, 1.195072455, 1.345335083, 1.204604417, 1.347019833, 1.2073185, 1.33543075], 
                                [1.141864083, 1.35488325, 1.211640167, 1.343200333, 1.204604417, 1.34217675, 1.223254167, 1.29154025], 
                                [1.139880273, 1.318843091, 1.170492273, 1.326746917, 1.204604417, 1.307186091, 1.276670833, 1.385027917], 
                                [1.1287745, 1.3601365, 1.252567167, 1.399775333, 1.204604417, 1.35915825, 1.239702583, 1.373332667], 
                                [1.142360727, 1.328625417, 1.317906917, 1.339749583, 1.204604417, 1.337023917, 1.28447675, 1.366055417], 
                                [1.127734833, 1.439416539, 1.322433636, 1.379566583, 1.204604417, 1.337023917, 1.334303083, 1.308617909], 
                                [1.09281925, 1.396449333, 1.370727917, 1.35572675, 1.204604417, 1.418678667, 1.283563917, 1.398543909], 
                                [1.075800273, 1.368074583, 1.367275083, 1.359085917, 1.204604417, 1.34840575, 1.280358583, 1.374393667], 
                                [1.173800833, 1.2650205, 1.37104375, 1.383794833, 1.204604417, 1.273370545, 1.203427333, 1.525207833]])
data4 = np.asarray([[10.6625, 4.258333333, 8.841666667, 7.275, 4.166666667, 7.066666667, 8.991666667, 7.266666667], 
                                [10.6625, 7.408333333, 9.075, 7.525, 4.166666667, 7.225, 9.058333333, 7.416666667], 
                                [10.45, 6.883333333, 8.766666667, 7.175, 4.166666667, 7.416666667, 8.7, 7.35], 
                                [10.65833333, 6.891666667, 8.65, 6.766666667, 4.166666667, 7.041666667, 8.85, 7.608333333], 
                                [10.44166667, 5.85, 7.725, 5.85, 4.166666667, 7.441666667, 8.566666667, 7.25], 
                                [9.804166667, 5.868181818, 6.391666667, 4.816666667, 4.166666667, 7.441666667, 8.408333333, 7.008333333], 
                                [8.608333333, 4.725, 5.391666667, 4.483333333, 4.166666667, 6.216666667, 8.141666667, 6.65], 
                                [8.254166667, 4.258333333, 4.958333333, 4.391666667, 4.166666667, 6.491666667, 7.766666667, 7.008333333], 
                                [7.083333333, 3.833333333, 4, 5.333333333, 4.166666667, 8, 10.16666667, 4.916666667]])
data5 = np.asarray([[1.4825124, 1.982595167, 1.5234915, 1.653235, 1.982595167, 1.666955636, 1.524199333, 1.683364917], 
                                  [1.4825124, 1.654701167, 1.517025917, 1.643207182, 1.982595167, 1.6828545, 1.527701167, 1.65699275], 
                                  [1.482392833, 1.682231, 1.51578025, 1.709363, 1.982595167, 1.700164364, 1.533455917, 1.673925917], 
                                  [1.49015825, 1.790169091, 1.553183727, 1.789624545, 1.982595167, 1.68981975, 1.531873333, 1.689875455], 
                                  [1.468828167, 1.851268167, 1.618431667, 1.820853167, 1.982595167, 1.67336175, 1.53652975, 1.696648333], 
                                  [1.435084091, 1.915208909, 1.750666, 1.895481727, 1.982595167, 1.67336175, 1.56615, 1.66786075], 
                                  [1.53030525, 1.90902825, 1.846505083, 1.940854417, 1.982595167, 1.71613575, 1.586151333, 1.682299], 
                                  [1.521743091, 1.922920083, 1.9133242, 1.9374655, 1.982595167, 1.7051203, 1.588712667, 1.669912727], 
                                  [1.520880583, 1.94066675, 1.861251167, 1.93421425, 1.982595167, 1.602883667, 1.49437575, 1.842198083]])
data6 = np.asarray([[1.2807968, 1.488835833, 1.341352167, 1.431514667, 1.488835833, 1.430797091, 1.3362005, 1.424219167], 
                                  [1.2807968, 1.421562333, 1.327619833, 1.429890545, 1.488835833, 1.4323069, 1.346567083, 1.4165365], 
                                  [1.277958917, 1.437026583, 1.335437917, 1.438337083, 1.488835833, 1.437067091, 1.344013917, 1.415235083], 
                                  [1.283085333, 1.453375455, 1.356501545, 1.450036, 1.488835833, 1.427044583, 1.34960025, 1.438808364], 
                                  [1.268004667, 1.462939667, 1.40619275, 1.46492825, 1.488835833, 1.430747667, 1.354279417, 1.421460167], 
                                  [1.237858364, 1.459220818, 1.45119475, 1.466812727, 1.488835833, 1.430747667, 1.377672917, 1.429357917], 
                                  [1.328794667, 1.457506083, 1.460752667, 1.462234917, 1.488835833, 1.441221833, 1.379891417, 1.411465364], 
                                  [1.330550636, 1.456829, 1.4592623, 1.461055083, 1.488835833, 1.4401936, 1.404412583, 1.421547909], 
                                  [1.35435675, 1.45808725, 1.4534765, 1.444796417, 1.488835833, 1.39378425, 1.3031615, 1.443915]])
data7 = np.asarray([[1.2159326, 1.400438583, 1.320585667, 1.423329917, 1.400438583, 1.430327818, 1.301670333, 1.400994333], 
                                      [1.2159326, 1.3986115, 1.284800917, 1.401206455, 1.400438583, 1.4117044, 1.301684083, 1.379238667], 
                                      [1.2244685, 1.466521583, 1.293415917, 1.348931917, 1.400438583, 1.390515182, 1.294711833, 1.368107417], 
                                      [1.232282417, 1.373961455, 1.363806455, 1.377635455, 1.400438583, 1.395360833, 1.327329833, 1.447189091], 
                                      [1.224829, 1.380671083, 1.371606667, 1.393770083, 1.400438583, 1.417642833, 1.321127917, 1.37250875], 
                                      [1.184280273, 1.279307182, 1.386183667, 1.350421636, 1.400438583, 1.417642833, 1.387051333, 1.399020833], 
                                      [1.25716475, 1.267317333, 1.32585675, 1.2979505, 1.400438583, 1.382750583, 1.321498083, 1.387623182], 
                                      [1.284693, 1.309352917, 1.3121626, 1.303761083, 1.400438583, 1.3918425, 1.41728, 1.371228273], 
                                      [1.271658833, 1.400438583, 1.384523167, 1.17548425, 1.400438583, 1.281801917, 1.353591583, 1.337055]])
data8 = np.asarray([[49.65833333, 24.91666667, 46.39166667, 38.66666667, 18.58333333, 36.825, 46.08333333, 37.28333333], 
                                            [49.65833333, 39.13333333, 46.51666667, 39.275, 18.58333333, 35.70833333, 45.73333333, 37.45833333], 
                                            [50.72916667, 37.35833333, 45.75, 35.875, 18.58333333, 36.01666667, 46.05, 37.05], 
                                            [50.1625, 31.19166667, 44.85833333, 32.74166667, 18.58333333, 36.90833333, 45.5, 36.28333333], 
                                            [49.77083333, 27.44166667, 41.21666667, 30.43333333, 18.58333333, 38.075, 44.825, 37.33333333], 
                                            [49.2625, 21.875, 33.46666667, 23.96666667, 18.58333333, 38.075, 43.68333333, 38.28333333], 
                                            [42.77916667, 22.375, 27.89166667, 20.74166667, 18.58333333, 36.1, 42.75, 36.75833333], 
                                            [41.54166667, 21.8, 22.95833333, 21.41666667, 18.58333333, 34.86666667, 42.41666667, 36.375], 
                                            [38.25, 18.25, 19.66666667, 20.41666667, 18.58333333, 42.41666667, 48.66666667, 27.25]])

for i in range(1, 9):
    path = globals()[f"data{i}"]
    globals()[f"df{i}"] = pd.DataFrame(path)
    globals()[f"df{i}"].columns = ['VI', 'DQN-SGD', 'DQN-Shoe', 'DQN-Adam', 'DQN-FN', 'PPO-SGD', 'PPO-Shoe', 'PPO-Adam']
    globals()[f"df{i}"]['epsilons'] = [1, 2, 3, 4, 5, 6, 7, 8, 9]

for i in range(1, 9):
    globals()[f"fig{i}"] = px.line(globals()[f"df{i}"], x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['DQN-SGD'])
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['DQN-Shoe'], mode='lines')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['DQN-Adam'], mode='lines')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['DQN-FN'], mode='lines')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['PPO-SGD'], mode='lines')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['PPO-Shoe'], mode='lines')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['PPO-Adam'], mode='lines')
    globals()[f"fig{i}"].add_scatter(x=globals()[f"df{i}"]['epsilons'], y=globals()[f"df{i}"]['VI'], mode='lines')

for i in range(1, 9):
    globals()[f"fig{i}_traces"] = []
    for trace in range(len(globals()[f"fig{i}"]["data"])):
        globals()[f"fig{i}_traces"].append(globals()[f"fig{i}"]["data"][trace])

final_figure = sp.make_subplots(rows=2, cols=4) 

row = 1
col = 0
for i in range(1, 9):
    col += 1
    if i == 5:
        col = 1
        row = 2
    for traces in globals()[f"fig{i}_traces"]:
        final_figure.append_trace(traces, row=row, col=col)

final_figure.update_xaxes(dict(
        tickmode = 'array',
        tickvals = [1, 2, 3, 4, 5, 6, 7, 8, 9],
        ticktext = ['0.1', '0.105', '0.2', '0.5', '1', '2', '5', '10', '$\infty$'],
        tickfont = {"size": 16},
    )
)
final_figure.update_yaxes(dict(
        tickfont = {"size": 16},
    )
)
final_figure.update_layout(
    colorway=['#636EFA', 'rgb(255, 217, 47)', '#1CFFCE', '#000000', '#FF9616', '#ff3300', '#FC1CBF', '#109618'], 
    width=1800,
    height=800,
    showlegend=False,
)
final_figure.update_layout({
'plot_bgcolor': 'rgb(255, 255, 255)',
'paper_bgcolor': 'rgb(255, 255, 255)',
})
final_figure.update_xaxes(showline=True, linewidth=2, linecolor='#d1d1e0', gridcolor='#d1d1e0')
final_figure.update_yaxes(showline=True, linewidth=2, linecolor='#d1d1e0', gridcolor='#d1d1e0')

row = 1
col = 0
for i in range(1, 9):
    col += 1
    if i == 5:
        col = 1
        row = 2
    final_figure.update_xaxes(title_text=r"$\epsilon \text{ budget} \rightarrow$", row=row, col=col)

final_figure.update_xaxes(title_font={"size":25})

final_figure.update_yaxes(title_text=r"$L_1\text{ distance} \rightarrow$", row=1, col=1)
final_figure.update_yaxes(title_text=r"$L_1\text{ distance} \rightarrow$", row=2, col=1)
final_figure.update_yaxes(title_text=r"$L_2\text{ distance} \rightarrow$", title_font={"size":15}, row=1, col=2)
final_figure.update_yaxes(title_text=r"$L_2\text{ distance} \rightarrow$", title_font={"size":15}, row=2, col=2)
final_figure.update_yaxes(title_text=r"$L_\infty \text{ distance} \rightarrow$", title_font={"size":15}, row=1, col=3)
final_figure.update_yaxes(title_text=r"$L_\infty \text{ distance} \rightarrow$", title_font={"size":15}, row=2, col=3)
final_figure.update_yaxes(title_text=r"$\text{Sign change count} \rightarrow$", row=1, col=4)
final_figure.update_yaxes(title_text=r"$\text{Sign change count} \rightarrow$", row=2, col=4)

# !pip install -U kaleido
import os

if not os.path.exists("plots"):
    os.mkdir("plots")

path = "plots/final_figure.jpeg"
final_figure.write_image(path)

